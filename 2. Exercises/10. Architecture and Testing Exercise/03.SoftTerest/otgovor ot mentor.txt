Добро начало. В абстрактния клас е по-правилно да подадеш референцията към main елемента отвън, 
вместо изгледа сам да си го взима от страницата, защото по този начин обвързваш класа с конкретния документ 
(в друг документ съдържанието може да не е в main и даже в същия сайт може да искаш да имаш частичен изглед някъде на страницата)
Виждам, че във всеки изглед override-ваш showView, за да добавиш логика - по-хитро е showView да вика някакъв празен метод в абстрактния клас (примерно prepareView)
и така в наследяващите класове имплементираш само този метод, без да пипаш showView. 

Имаш груба грешка в изгледите, които имат формуляр - при всяко извикване на showView за login примерно, 
се извиква addEventListener, само че формуляра си е същия като предния път. 
Това означава че го закачаш многократно и тази заявка ще се изпълни множество пъти с един клик.
Аналогично на предния абзац, при извикване на конструктора ти е нужен празен метод в абстрактния клас (примерно setupView),
който се изпълнява при инстанциране. Всеки child клас който има логика ще override-не този метод и ще си подготви eventListener-ите, без да ги повтаря. 

Този шаблон на работа се нарича lifecycle methods и е дълбоко заложен в почти всички съвременни библиотеки, като React и Angular например.